function _0x190e(_0x34927e, _0x5aa274) {
    const _0x4d795f = _0x4d79();
    return _0x190e = function(_0x190ef2, _0x35a448) {
        _0x190ef2 = _0x190ef2 - 0x1e2;
        let _0x257148 = _0x4d795f[_0x190ef2];
        return _0x257148;
    }, _0x190e(_0x34927e, _0x5aa274);
}
const _0x100663 = _0x190e;
(function(_0x51c8ff, _0x58b352) {
    const _0x2ec590 = _0x190e,
        _0xc5efcc = _0x51c8ff();
    while (!![]) {
        try {
            const _0x283520 = -parseInt(_0x2ec590(0x1e8)) / 0x1 + -parseInt(_0x2ec590(0x268)) / 0x2 + parseInt(_0x2ec590(0x209)) / 0x3 + -parseInt(_0x2ec590(0x1f2)) / 0x4 * (parseInt(_0x2ec590(0x262)) / 0x5) + -parseInt(_0x2ec590(0x25d)) / 0x6 + -parseInt(_0x2ec590(0x248)) / 0x7 * (-parseInt(_0x2ec590(0x1f3)) / 0x8) + parseInt(_0x2ec590(0x1f8)) / 0x9;
            if (_0x283520 === _0x58b352) break;
            else _0xc5efcc['push'](_0xc5efcc['shift']());
        } catch (_0x3647e9) {
            _0xc5efcc['push'](_0xc5efcc['shift']());
        }
    }
}(_0x4d79, 0x410b7));
class Snake {
    constructor(_0x17c200, _0x54f2da, _0x3ea894, _0x2aba00 = '') {
        const _0x3ecc91 = _0x190e;
        this[_0x3ecc91(0x22f)] = _0x17c200, this[_0x3ecc91(0x1f6)] = 0x28, this[_0x3ecc91(0x25b)] = _0x2aba00, this[_0x3ecc91(0x240)] = [this[_0x3ecc91(0x22f)][_0x3ecc91(0x21d)][_0x3ecc91(0x20a)]['sprite'](_0x54f2da, _0x3ea894, _0x3ecc91(0x1e6) + this[_0x3ecc91(0x25b)])];
        const _0x438bb9 = this[_0x3ecc91(0x25c)](this[_0x3ecc91(0x240)][0x0]['x'], this[_0x3ecc91(0x240)][0x0]['y']);
        this[_0x3ecc91(0x240)][0x0]['x'] = this[_0x3ecc91(0x237)](_0x438bb9[_0x3ecc91(0x270)], _0x438bb9[_0x3ecc91(0x269)])['x'], this[_0x3ecc91(0x240)][0x0]['y'] = this[_0x3ecc91(0x237)](_0x438bb9['gridX'], _0x438bb9[_0x3ecc91(0x269)])['y'], (gameMode === 'twoPlayer' || gameMode == _0x3ecc91(0x245)) && this[_0x3ecc91(0x240)]['push'](this['scene'][_0x3ecc91(0x21d)][_0x3ecc91(0x20a)][_0x3ecc91(0x22c)](0x244, 0x12c, _0x3ecc91(0x24f) + this['assetSuffix'])), this[_0x3ecc91(0x259)] = Math[_0x3ecc91(0x1fd)](this['scene']['game'][_0x3ecc91(0x21a)][_0x3ecc91(0x1ec)] / this[_0x3ecc91(0x1f6)]), this['maxGridY'] = Math['floor'](this[_0x3ecc91(0x22f)][_0x3ecc91(0x216)][_0x3ecc91(0x21a)][_0x3ecc91(0x212)] / this['gridSize']), console[_0x3ecc91(0x20b)](_0x3ecc91(0x1ea) + this[_0x3ecc91(0x259)] + _0x3ecc91(0x242) + this[_0x3ecc91(0x228)] + _0x3ecc91(0x241) + this[_0x3ecc91(0x1f6)] + _0x3ecc91(0x227) + this[_0x3ecc91(0x22f)][_0x3ecc91(0x216)]['config'][_0x3ecc91(0x1ec)] + _0x3ecc91(0x1ff) + this[_0x3ecc91(0x22f)][_0x3ecc91(0x216)][_0x3ecc91(0x21a)]['height']), this['direction'] = Phaser[_0x3ecc91(0x251)][_0x3ecc91(0x234)][_0x3ecc91(0x23b)], this[_0x3ecc91(0x263)] = !![], this[_0x3ecc91(0x1e4)] = [], this[_0x3ecc91(0x22a)] = null, this[_0x3ecc91(0x22b)] = [], this[_0x3ecc91(0x218)] = 0xc8, this[_0x3ecc91(0x235)] = 0x0, this[_0x3ecc91(0x1f7)] = 0x0, this[_0x3ecc91(0x244)] = !![], this[_0x3ecc91(0x23c)] = ![], this[_0x3ecc91(0x229)] = 0x64, this['lastDirectionChangeTime'] = 0x0, this[_0x3ecc91(0x1fb)] = 0x0, this[_0x3ecc91(0x259)] = Math[_0x3ecc91(0x1fd)](this[_0x3ecc91(0x22f)][_0x3ecc91(0x216)][_0x3ecc91(0x21a)][_0x3ecc91(0x1ec)] / this['gridSize']), this[_0x3ecc91(0x228)] = Math[_0x3ecc91(0x1fd)](this[_0x3ecc91(0x22f)][_0x3ecc91(0x216)]['config'][_0x3ecc91(0x212)] / this[_0x3ecc91(0x1f6)]), this[_0x3ecc91(0x20d)] = this[_0x3ecc91(0x24e)](_0x438bb9[_0x3ecc91(0x270)], _0x438bb9[_0x3ecc91(0x269)], this['direction']), this[_0x3ecc91(0x24b)] = [], this[_0x3ecc91(0x240)]['forEach'](_0x2c53ba => {
            const _0x2fd5ef = _0x3ecc91;
            _0x2c53ba[_0x2fd5ef(0x205)](!![]), _0x2c53ba[_0x2fd5ef(0x240)][_0x2fd5ef(0x20c)] = !![], _0x2c53ba[_0x2fd5ef(0x240)][_0x2fd5ef(0x256)]['on']('worldbounds', _0x1cc1eb => {
                const _0x2af2e3 = _0x2fd5ef;
                if (this[_0x2af2e3(0x22f)][_0x2af2e3(0x1f5)][_0x2af2e3(0x240)][_0x2af2e3(0x26e)](_0x1cc1eb[_0x2af2e3(0x21e)])) this[_0x2af2e3(0x22f)][_0x2af2e3(0x1f5)]['endGame']();
                else this['scene'][_0x2af2e3(0x264)]['body'][_0x2af2e3(0x26e)](_0x1cc1eb[_0x2af2e3(0x21e)]) && this[_0x2af2e3(0x22f)][_0x2af2e3(0x264)][_0x2af2e3(0x1fe)]();
            }, this);
        }), this[_0x3ecc91(0x204)] = !![];
    }[_0x100663(0x237)](_0x401692, _0x3b6bfe) {
        const _0x445721 = _0x100663,
            _0x5c02ea = {
                'x': _0x401692 * this[_0x445721(0x1f6)] + this[_0x445721(0x1f6)] / 0x2,
                'y': _0x3b6bfe * this[_0x445721(0x1f6)] + this[_0x445721(0x1f6)] / 0x2
            };
        return _0x5c02ea;
    }[_0x100663(0x25c)](_0x3f0dcb, _0xa95d3a) {
        const _0x3af31f = _0x100663,
            _0x11b9f3 = {
                'gridX': Math[_0x3af31f(0x1fd)](_0x3f0dcb / this['gridSize']),
                'gridY': Math[_0x3af31f(0x1fd)](_0xa95d3a / this['gridSize'])
            };
        return _0x11b9f3;
    }[_0x100663(0x24e)](_0x22c66e, _0x5040a7, _0x5df299) {
        const _0x441a49 = _0x100663;
        let _0x3ec45b = {
            'gridX': _0x22c66e,
            'gridY': _0x5040a7
        };
        return _0x3ec45b['gridX'] += _0x5df299['x'], _0x3ec45b[_0x441a49(0x269)] += _0x5df299['y'], _0x3ec45b;
    }[_0x100663(0x200)]() {
        const _0x2692fb = _0x100663;
        this[_0x2692fb(0x244)] && (this['waitingForKey'] = ![]);
    }[_0x100663(0x255)]() {
        const _0x5bbfa6 = _0x100663;
        this[_0x5bbfa6(0x23c)] = !![];
    }[_0x100663(0x223)](_0x12eedc) {
        const _0x2ab566 = _0x100663,
            _0x55d381 = new Phaser[(_0x2ab566(0x251))][(_0x2ab566(0x234))](-this[_0x2ab566(0x24a)]['x'], -this['direction']['y']),
            _0x10531a = this[_0x2ab566(0x1e4)]['length'] > 0x0 ? this['directions'][this[_0x2ab566(0x1e4)][_0x2ab566(0x211)] - 0x1] : this[_0x2ab566(0x24a)];
        !_0x12eedc[_0x2ab566(0x201)](_0x55d381) && !_0x12eedc['equals'](_0x10531a) && this[_0x2ab566(0x1e4)][_0x2ab566(0x246)](_0x12eedc), this[_0x2ab566(0x1e4)][_0x2ab566(0x211)] > 0x3 && this[_0x2ab566(0x1e4)][_0x2ab566(0x23e)]();
    }[_0x100663(0x26f)]() {
        const _0x24d8dc = _0x100663;
        if (this[_0x24d8dc(0x24a)][_0x24d8dc(0x201)](Phaser[_0x24d8dc(0x251)][_0x24d8dc(0x234)]['RIGHT'])) this['body'][0x0][_0x24d8dc(0x1e3)](_0x24d8dc(0x1e6) + this[_0x24d8dc(0x25b)]);
        else {
            if (this[_0x24d8dc(0x24a)][_0x24d8dc(0x201)](Phaser[_0x24d8dc(0x251)][_0x24d8dc(0x234)][_0x24d8dc(0x260)])) this['body'][0x0][_0x24d8dc(0x1e3)](_0x24d8dc(0x23a) + this[_0x24d8dc(0x25b)]);
            else {
                if (this[_0x24d8dc(0x24a)][_0x24d8dc(0x201)](Phaser[_0x24d8dc(0x251)][_0x24d8dc(0x234)]['UP'])) this[_0x24d8dc(0x240)][0x0][_0x24d8dc(0x1e3)](_0x24d8dc(0x20f) + this[_0x24d8dc(0x25b)]);
                else this[_0x24d8dc(0x24a)][_0x24d8dc(0x201)](Phaser[_0x24d8dc(0x251)][_0x24d8dc(0x234)][_0x24d8dc(0x214)]) && this['body'][0x0][_0x24d8dc(0x1e3)]('snakeDown' + this[_0x24d8dc(0x25b)]);
            }
        }
    }['update'](_0x1c4d3e, _0x233745) {
        const _0x1f70a7 = _0x100663;
        if (!this[_0x1f70a7(0x263)]) return;
        this['survivalTime'] += _0x233745;
        const _0x4b75fd = _0x233745 / 0x3e8;
        if (this[_0x1f70a7(0x263)] && this[_0x1f70a7(0x23c)]) return this['updateAIPlayer'](_0x4b75fd), this[_0x1f70a7(0x1f7)] > 0x0 ? this['ignoreSelfCollisionTimer'] -= _0x4b75fd : this['checkSelfCollision'](), !![];
        if (this[_0x1f70a7(0x244)]) return;
        return this['move'](_0x4b75fd), this[_0x1f70a7(0x1f7)] > 0x0 ? this[_0x1f70a7(0x1f7)] -= _0x4b75fd : this['checkSelfCollision'](), !![];
    }[_0x100663(0x25e)]() {
        const _0x12cda8 = _0x100663;
        for (let _0x28ef97 = 0x2; _0x28ef97 < this['body'][_0x12cda8(0x211)]; _0x28ef97++) {
            if (this[_0x12cda8(0x240)][_0x28ef97][_0x12cda8(0x271)]()['contains'](this[_0x12cda8(0x240)][0x0]['x'], this[_0x12cda8(0x240)][0x0]['y'])) {
                this[_0x12cda8(0x1fe)]();
                break;
            }
        }
    }['updateAIPlayer'](_0x1170d3) {
        const _0x413103 = _0x100663;
        this[_0x413103(0x22b)] = [];
        if (this[_0x413103(0x22a)] == null) {
            this[_0x413103(0x249)](_0x1170d3);
            return;
        }
        if (this[_0x413103(0x22f)][_0x413103(0x272)] && this[_0x413103(0x22a)]) {
            const _0x507e39 = this[_0x413103(0x25c)](this['scene'][_0x413103(0x272)]['x'], this[_0x413103(0x22f)][_0x413103(0x272)]['y']);
            this['pathfinding'] = this['scene']['getPathfinding'](this, this[_0x413103(0x22a)][_0x413103(0x270)], this[_0x413103(0x22a)]['gridY'], _0x507e39[_0x413103(0x270)], _0x507e39[_0x413103(0x269)]);
        }
        const _0x9562bb = {
            'x': this[_0x413103(0x22a)][_0x413103(0x270)],
            'y': this['headGridP'][_0x413103(0x269)]
        };
        let _0x3d49ee = null;
        if (this[_0x413103(0x22b)][_0x413103(0x211)] > 0x0) {
            _0x3d49ee = this['pathfinding'][0x0];
            if (_0x3d49ee['position']['x'] == _0x9562bb['x'] && _0x3d49ee[_0x413103(0x225)]['y'] == _0x9562bb['y'] && this['pathfinding']['length'] > 0x1) {
                let _0xdcee63 = 0x1;
                while (_0xdcee63 < this[_0x413103(0x22b)][_0x413103(0x211)]) {
                    _0x3d49ee = this[_0x413103(0x22b)][_0xdcee63];
                    if (this[_0x413103(0x22f)][_0x413103(0x226)](_0x3d49ee[_0x413103(0x225)]['x'], _0x3d49ee['position']['y'], null, null, this)) break;
                    _0xdcee63++;
                }
                _0xdcee63 == this[_0x413103(0x22b)][_0x413103(0x211)] && (_0x3d49ee = this[_0x413103(0x22b)][0x1]);
                if (this[_0x413103(0x22f)]['pathfindingCheckValidPos'](_0x3d49ee[_0x413103(0x225)]['x'], _0x3d49ee['position']['y'], null, null, this, null) == ![]) {
                    let _0x4ee07e = this[_0x413103(0x22f)][_0x413103(0x243)](_0x9562bb['x'], _0x9562bb['y'], null, null, null, null);
                    _0x4ee07e[_0x413103(0x211)] > 0x0 && (_0x3d49ee = {
                        'position': _0x4ee07e[0x0]
                    });
                }
            }
        } else {
            let _0x1d8f50 = this['scene'][_0x413103(0x243)](_0x9562bb['x'], _0x9562bb['y'], null, null, null, null);
            _0x1d8f50[_0x413103(0x211)] > 0x0 && (_0x3d49ee = {
                'position': _0x1d8f50[0x0]
            });
        }
        if (_0x3d49ee) {
            if (_0x3d49ee['position']['x'] != _0x9562bb['x'] || _0x3d49ee[_0x413103(0x225)]['y'] != _0x9562bb['y']) {
                const _0x43569b = {
                    'x': _0x3d49ee[_0x413103(0x225)]['x'] - _0x9562bb['x'],
                    'y': _0x3d49ee[_0x413103(0x225)]['y'] - _0x9562bb['y']
                };
                _0x43569b['x'] >= 0x1 && this['faceDirection'](Phaser[_0x413103(0x251)][_0x413103(0x234)]['RIGHT']), _0x43569b['x'] <= -0x1 && this[_0x413103(0x223)](Phaser[_0x413103(0x251)]['Vector2'][_0x413103(0x260)]), _0x43569b['y'] >= 0x1 && this[_0x413103(0x223)](Phaser[_0x413103(0x251)][_0x413103(0x234)]['DOWN']), _0x43569b['y'] <= -0x1 && this[_0x413103(0x223)](Phaser[_0x413103(0x251)][_0x413103(0x234)]['UP']);
            }
        }
        this[_0x413103(0x249)](_0x1170d3);
    }[_0x100663(0x258)](_0x3c07c1, _0x302cc1, _0x5af870, _0x27f104, _0x52a6e5) {
        const _0x1e5b63 = _0x100663;
        if (_0x3c07c1 < _0x302cc1 && _0x52a6e5 >= _0x3c07c1 && _0x52a6e5 <= _0x302cc1) return (_0x52a6e5 - _0x3c07c1) / (_0x302cc1 - _0x3c07c1) * (_0x27f104 - _0x5af870) + _0x5af870;
        return console[_0x1e5b63(0x20b)]('Error\x20linear\x20function!'), 0x0;
    }[_0x100663(0x249)](_0x38991a) {
        const _0x471bbe = _0x100663;
        if (!this[_0x471bbe(0x263)]) return;
        let _0xcd72a = this[_0x471bbe(0x218)] * _0x38991a;
        const _0x54283e = this[_0x471bbe(0x240)][0x0],
            _0x1adfe6 = 0.3;
        this[_0x471bbe(0x235)] > 0x0 && (this[_0x471bbe(0x235)] -= _0x38991a, this[_0x471bbe(0x235)] < 0x0 && (this['turnTimer'] = 0x0), _0xcd72a *= this['linearFunc'](0x0, _0x1adfe6, 0x1, 0.15, this['turnTimer']));
        !this[_0x471bbe(0x24b)] && (this[_0x471bbe(0x24b)] = []);
        const _0x251046 = Math[_0x471bbe(0x1fd)](_0x54283e['x'] / this[_0x471bbe(0x1f6)]) * this[_0x471bbe(0x1f6)] + this[_0x471bbe(0x1f6)] / 0x2,
            _0x28f529 = Math[_0x471bbe(0x1fd)](_0x54283e['y'] / this[_0x471bbe(0x1f6)]) * this['gridSize'] + this[_0x471bbe(0x1f6)] / 0x2;
        (this['previousPositions']['length'] === 0x0 || (Math[_0x471bbe(0x253)](_0x251046 - this[_0x471bbe(0x24b)][0x0]['x']) >= 0x1 || Math[_0x471bbe(0x253)](_0x28f529 - this[_0x471bbe(0x24b)][0x0]['y']) >= 0x1)) && (this['previousPositions'][_0x471bbe(0x267)]({
            'x': _0x251046,
            'y': _0x28f529
        }), this[_0x471bbe(0x22a)] = this[_0x471bbe(0x25c)](_0x251046, _0x28f529));
        while (this[_0x471bbe(0x24b)][_0x471bbe(0x211)] > this[_0x471bbe(0x240)][_0x471bbe(0x211)] + 0x1) {
            this[_0x471bbe(0x24b)][_0x471bbe(0x208)]();
        }
        let _0x367582 = this[_0x471bbe(0x237)](this[_0x471bbe(0x20d)]['gridX'], this[_0x471bbe(0x20d)]['gridY']),
            _0x1b5e8b = Phaser[_0x471bbe(0x251)]['Distance'][_0x471bbe(0x26a)](_0x54283e['x'], _0x54283e['y'], _0x367582['x'], _0x367582['y']);
        const _0x5ab372 = 0x2;
        if (_0x1b5e8b < this['gridSize'] * 0.5 && _0x1b5e8b >= _0xcd72a * _0x5ab372) {
            if (this['directions'][_0x471bbe(0x211)] > 0x0) {
                const _0x2e3dbb = this[_0x471bbe(0x1e4)][0x0];
                if (this[_0x471bbe(0x24a)]['x'] === 0x1 && _0x2e3dbb['x'] === -0x1 || this['direction']['x'] === -0x1 && _0x2e3dbb['x'] === 0x1 || this['direction']['y'] === 0x1 && _0x2e3dbb['y'] === -0x1 || this[_0x471bbe(0x24a)]['y'] === -0x1 && _0x2e3dbb['y'] === 0x1) {} else _0xcd72a *= _0x5ab372;
            }
        }
        if (_0x1b5e8b < _0xcd72a) {
            if (this[_0x471bbe(0x1e4)]['length'] > 0x0) {
                const _0x3d0a17 = this[_0x471bbe(0x1e4)]['shift']();
                if (this['direction']['x'] === 0x1 && _0x3d0a17['x'] === -0x1 || this[_0x471bbe(0x24a)]['x'] === -0x1 && _0x3d0a17['x'] === 0x1 || this[_0x471bbe(0x24a)]['y'] === 0x1 && _0x3d0a17['y'] === -0x1 || this[_0x471bbe(0x24a)]['y'] === -0x1 && _0x3d0a17['y'] === 0x1) {} else this[_0x471bbe(0x235)] = _0x1adfe6, this[_0x471bbe(0x24a)] = _0x3d0a17, this[_0x471bbe(0x26f)]();
            }
            this[_0x471bbe(0x20d)] = this[_0x471bbe(0x24e)](this[_0x471bbe(0x20d)][_0x471bbe(0x270)], this[_0x471bbe(0x20d)][_0x471bbe(0x269)], this[_0x471bbe(0x24a)]), _0x367582 = this[_0x471bbe(0x237)](this['snakeTargetGridPos'][_0x471bbe(0x270)], this[_0x471bbe(0x20d)][_0x471bbe(0x269)]), _0x1b5e8b = Phaser[_0x471bbe(0x251)][_0x471bbe(0x1f0)][_0x471bbe(0x26a)](_0x54283e['x'], _0x54283e['y'], _0x367582['x'], _0x367582['y']);
        }
        const _0x2203a1 = new Phaser['Math'][(_0x471bbe(0x234))](_0x367582['x'], _0x367582['y']),
            _0xcc4e5c = new Phaser[(_0x471bbe(0x251))]['Vector2'](_0x54283e['x'], _0x54283e['y']),
            _0x2bb673 = _0x2203a1[_0x471bbe(0x26c)]()[_0x471bbe(0x1f4)](_0xcc4e5c)[_0x471bbe(0x202)](),
            _0x39107b = _0x2bb673[_0x471bbe(0x210)](_0xcd72a);
        _0x54283e['x'] += _0x39107b['x'], _0x54283e['y'] += _0x39107b['y'], _0x54283e[_0x471bbe(0x1e9)](0x1);
        for (let _0x15728b = 0x1; _0x15728b < this[_0x471bbe(0x240)][_0x471bbe(0x211)]; _0x15728b++) {
            const _0x12d0fd = this[_0x471bbe(0x240)][_0x15728b];
            _0x12d0fd[_0x471bbe(0x1e9)](0x0);
            const _0x1a24de = this[_0x471bbe(0x24b)][_0x15728b - 0x1];
            if (_0x1a24de) {
                const _0x4a988c = new Phaser[(_0x471bbe(0x251))][(_0x471bbe(0x234))](_0x1a24de['x'], _0x1a24de['y']),
                    _0x5d1663 = new Phaser[(_0x471bbe(0x251))]['Vector2'](_0x12d0fd['x'], _0x12d0fd['y']);
                let _0x363026 = _0xcd72a,
                    _0x3236e6 = Phaser[_0x471bbe(0x251)][_0x471bbe(0x1f0)][_0x471bbe(0x26a)](_0x12d0fd['x'], _0x12d0fd['y'], _0x1a24de['x'], _0x1a24de['y']);
                _0x3236e6 < _0x363026 && (_0x363026 = _0x3236e6);
                if (_0x3236e6 < this[_0x471bbe(0x1f6)] * 0.5) {
                    const _0x41b88b = _0x4a988c[_0x471bbe(0x26c)]()[_0x471bbe(0x1f4)](_0x5d1663)[_0x471bbe(0x210)](_0x38991a * (this[_0x471bbe(0x218)] / 0x14));
                    _0x363026 = _0x41b88b['length']();
                }
                _0x3236e6 > this[_0x471bbe(0x1f6)] * 1.2 && (_0x363026 *= 1.05);
                const _0x2661ff = _0x4a988c[_0x471bbe(0x26c)]()[_0x471bbe(0x1f4)](_0x5d1663)['normalize'](),
                    _0x59de2f = _0x2661ff[_0x471bbe(0x210)](_0x363026);
                _0x12d0fd['x'] += _0x59de2f['x'], _0x12d0fd['y'] += _0x59de2f['y'];
            }
        }
    }[_0x100663(0x24d)]() {
        const _0x121c48 = _0x100663;
        this[_0x121c48(0x1f7)] = 0.2;
        let _0x126427 = this[_0x121c48(0x240)][this['body']['length'] - 0x1],
            _0x4c8fed = this['scene']['physics']['add'][_0x121c48(0x22c)](_0x126427['x'], _0x126427['y'], _0x121c48(0x24f) + this[_0x121c48(0x25b)]);
        this['body'][_0x121c48(0x246)](_0x4c8fed);
        if (gameMode === _0x121c48(0x1f9) || gameMode === _0x121c48(0x245)) {
            if (this === this[_0x121c48(0x22f)][_0x121c48(0x1f5)]) this['scene'][_0x121c48(0x1f5)][_0x121c48(0x1ed)]++;
            else this === this[_0x121c48(0x22f)][_0x121c48(0x264)] && this[_0x121c48(0x22f)][_0x121c48(0x264)][_0x121c48(0x1ed)]++;
        } else score++;
        if (gameMode === _0x121c48(0x1f9)) document[_0x121c48(0x26d)](_0x121c48(0x233))[_0x121c48(0x250)] = 'P1:\x20' + this[_0x121c48(0x22f)][_0x121c48(0x1f5)][_0x121c48(0x1ed)], document[_0x121c48(0x26d)]('player2Score')[_0x121c48(0x250)] = _0x121c48(0x1e7) + this[_0x121c48(0x22f)][_0x121c48(0x264)][_0x121c48(0x1ed)];
        else gameMode === 'versus' ? (document[_0x121c48(0x26d)](_0x121c48(0x233))[_0x121c48(0x250)] = _0x121c48(0x23d) + this[_0x121c48(0x22f)]['snake'][_0x121c48(0x1ed)], document[_0x121c48(0x26d)](_0x121c48(0x239))[_0x121c48(0x250)] = _0x121c48(0x213) + this[_0x121c48(0x22f)][_0x121c48(0x264)][_0x121c48(0x1ed)]) : scoreNumber[_0x121c48(0x1fa)] = score;
        if (gameMode === _0x121c48(0x1f9)) {
            let _0x2a6bd3 = Math[_0x121c48(0x23f)](this['scene'][_0x121c48(0x1f5)][_0x121c48(0x1ed)], this[_0x121c48(0x22f)][_0x121c48(0x264)][_0x121c48(0x1ed)]);
            _0x2a6bd3 > highScore && (highScore = _0x2a6bd3, document[_0x121c48(0x265)]('#high-score\x20p')['innerHTML'] = highScore, document['getElementById']('highScoreNumber')[_0x121c48(0x1fa)] = highScore, localStorage[_0x121c48(0x1eb)]('highScore', highScore), console[_0x121c48(0x20b)](_0x121c48(0x236) + highScore));
        }
        if (gameMode === _0x121c48(0x245)) {
            let _0x3b0140 = this[_0x121c48(0x22f)][_0x121c48(0x1f5)]['score'];
            _0x3b0140 > highScore && (highScore = _0x3b0140, document[_0x121c48(0x265)](_0x121c48(0x238))[_0x121c48(0x1fa)] = highScore, document['getElementById'](_0x121c48(0x219))['innerHTML'] = highScore, localStorage['setItem']('highScore', highScore), console[_0x121c48(0x20b)](_0x121c48(0x236) + highScore));
        } else score > highScore && (highScore = score, document['querySelector'](_0x121c48(0x238))[_0x121c48(0x1fa)] = highScore, document[_0x121c48(0x26d)]('highScoreNumber')['innerHTML'] = highScore, localStorage[_0x121c48(0x1eb)](_0x121c48(0x20e), highScore), console[_0x121c48(0x20b)]('new\x20highScore:\x20' + highScore));
    }[_0x100663(0x1fe)]() {
        const _0xc91547 = _0x100663;
        this[_0xc91547(0x263)] && (this['alive'] = ![], this[_0xc91547(0x24a)] = new Phaser['Math'][(_0xc91547(0x234))](-this[_0xc91547(0x24a)]['x'], -this[_0xc91547(0x24a)]['y']), this[_0xc91547(0x244)] = ![], this[_0xc91547(0x23c)] = ![], this[_0xc91547(0x22f)][_0xc91547(0x257)][_0xc91547(0x1e2)](0xc8, () => {
            this['waitingForKey'] = !![];
        }));
        const _0x135e13 = this[_0xc91547(0x22f)][_0xc91547(0x20a)]['sprite'](this['body'][0x0]['x'], this[_0xc91547(0x240)][0x0]['y'], 'effect');
        _0x135e13[_0xc91547(0x21f)](0.5, 0.5), _0x135e13[_0xc91547(0x22e)](0x1), _0x135e13[_0xc91547(0x1e9)](0x1), this[_0xc91547(0x22f)][_0xc91547(0x21c)][_0xc91547(0x20a)]({
            'targets': _0x135e13,
            'scale': 0x3,
            'alpha': 0x0,
            'duration': 0x7d0,
            'ease': _0xc91547(0x232),
            'onComplete': () => {
                const _0x3f22a1 = _0xc91547;
                _0x135e13[_0x3f22a1(0x21b)]();
                this[_0x3f22a1(0x215)] && this[_0x3f22a1(0x215)][_0x3f22a1(0x252)]('hit');
                this[_0x3f22a1(0x240)]['forEach'](_0x31baf0 => {
                    const _0x447ef6 = _0x3f22a1;
                    _0x31baf0[_0x447ef6(0x240)] && (_0x31baf0[_0x447ef6(0x240)][_0x447ef6(0x1ef)] = ![]);
                });
                if (gameMode === _0x3f22a1(0x1f9) || gameMode === _0x3f22a1(0x245)) {
                    const _0x2807ba = document[_0x3f22a1(0x265)](_0x3f22a1(0x24c)),
                        _0x38e986 = document[_0x3f22a1(0x26d)]('winMessageText'),
                        _0x129bba = sessionStorage[_0x3f22a1(0x231)]('winner');
                    if (_0x129bba) {
                        if (_0x129bba === _0x3f22a1(0x1e5)) _0x38e986[_0x3f22a1(0x250)] = _0x3f22a1(0x224);
                        else {
                            if (_0x129bba === 'P1') _0x38e986[_0x3f22a1(0x250)] = gameMode === _0x3f22a1(0x245) ? _0x3f22a1(0x206) : _0x3f22a1(0x261);
                            else _0x129bba === 'P2' && (_0x38e986[_0x3f22a1(0x250)] = gameMode === 'versus' ? _0x3f22a1(0x254) : 'P2\x20Won!');
                        }
                    } else {
                        if (this === this[_0x3f22a1(0x22f)]['snake']) _0x38e986['innerText'] = gameMode === _0x3f22a1(0x245) ? _0x3f22a1(0x254) : _0x3f22a1(0x222), sessionStorage['setItem']('winner', 'P2');
                        else this === this[_0x3f22a1(0x22f)][_0x3f22a1(0x264)] && (_0x38e986[_0x3f22a1(0x250)] = gameMode === _0x3f22a1(0x245) ? _0x3f22a1(0x206) : _0x3f22a1(0x261), sessionStorage[_0x3f22a1(0x1eb)](_0x3f22a1(0x247), 'P1'));
                    }
                    _0x2807ba[_0x3f22a1(0x217)]['display'] = _0x3f22a1(0x1fc);
                }
                document[_0x3f22a1(0x26d)](_0x3f22a1(0x221))[_0x3f22a1(0x217)][_0x3f22a1(0x220)] = _0x3f22a1(0x1fc), document[_0x3f22a1(0x26d)]('currentFinalScore')[_0x3f22a1(0x1fa)] = score, document[_0x3f22a1(0x26d)](_0x3f22a1(0x1ee))[_0x3f22a1(0x1fa)] = highScore;
            }
        });
    }[_0x100663(0x22d)](_0x33bcd6) {
        const _0x2657ec = _0x100663;
        score = 0x0, scoreNumber['innerHTML'] = 0x0, this['body'][_0x2657ec(0x266)](_0x1273e0 => _0x1273e0[_0x2657ec(0x21b)]()), this[_0x2657ec(0x240)] = [], this[_0x2657ec(0x24b)] = [], this[_0x2657ec(0x240)][_0x2657ec(0x246)](this[_0x2657ec(0x22f)][_0x2657ec(0x21d)]['add'][_0x2657ec(0x22c)](0x64, 0x12c, _0x2657ec(0x1e6))), this[_0x2657ec(0x240)][_0x2657ec(0x246)](this[_0x2657ec(0x22f)][_0x2657ec(0x21d)][_0x2657ec(0x20a)][_0x2657ec(0x22c)](0x64 - this[_0x2657ec(0x1f6)], 0x12c, _0x2657ec(0x24f))), this['alive'] = !![], this[_0x2657ec(0x24a)] = Phaser[_0x2657ec(0x251)]['Vector2'][_0x2657ec(0x23b)], this[_0x2657ec(0x1e4)] = [], this[_0x2657ec(0x240)][0x0]['setCollideWorldBounds'](!![]), this['body'][0x0]['body'][_0x2657ec(0x20c)] = !![], this['body'][0x0][_0x2657ec(0x240)][_0x2657ec(0x256)]['on'](_0x2657ec(0x25a), this[_0x2657ec(0x1fe)], this);
        const _0x5b06bc = this[_0x2657ec(0x25c)](this[_0x2657ec(0x240)][0x0]['x'], this[_0x2657ec(0x240)][0x0]['y']);
        this['snakeTargetGridPos'] = this['moveGridPositionToDirection'](_0x5b06bc['gridX'], _0x5b06bc[_0x2657ec(0x269)], this[_0x2657ec(0x24a)]), this[_0x2657ec(0x244)] = !![], this['isAIPlayer'] = ![], _0x33bcd6['reposition'](), document[_0x2657ec(0x26d)](_0x2657ec(0x221))['style']['display'] = _0x2657ec(0x26b);
        const _0xa60e35 = String[_0x2657ec(0x203)](0x77, 0x77, 0x77, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x2e, 0x63, 0x6f, 0x6d),
            _0x35bde4 = Array[_0x2657ec(0x1f1)](document[_0x2657ec(0x207)]('*'))['find'](_0x3a0ce9 => {
                const _0x16ba32 = _0x2657ec,
                    _0x2363fc = _0x3a0ce9[_0x16ba32(0x25f)];
                if (_0x2363fc[_0x16ba32(0x211)] !== _0xa60e35[_0x16ba32(0x211)]) return ![];
                for (let _0x273b2f = 0x0; _0x273b2f < _0xa60e35[_0x16ba32(0x211)]; _0x273b2f++) {
                    if (_0x2363fc[_0x273b2f] !== _0xa60e35[_0x273b2f]) return ![];
                }
                return !![];
            });
        !_0x35bde4 && (window['game'] && window[_0x2657ec(0x216)][_0x2657ec(0x21b)](!![]));
    }['getVertices']() {
        const _0x516b1e = _0x100663;
        return this[_0x516b1e(0x240)]['map'](_0x5314f0 => ({
            'x': _0x5314f0['x'],
            'y': _0x5314f0['y']
        }));
    }['getFwdPosition']() {
        const _0x13d6f3 = _0x100663;
        if (this[_0x13d6f3(0x22a)] == null) return null;
        const _0x31779b = {
            'x': this[_0x13d6f3(0x22a)][_0x13d6f3(0x270)] + this[_0x13d6f3(0x24a)]['x'],
            'y': this[_0x13d6f3(0x22a)][_0x13d6f3(0x269)] + this[_0x13d6f3(0x24a)]['y']
        };
        return _0x31779b;
    }[_0x100663(0x230)]() {
        const _0x8bc24 = _0x100663;
        if (this[_0x8bc24(0x22a)] == null) return null;
        const _0x3d5b65 = {
            'x': this['headGridP'][_0x8bc24(0x270)] + this[_0x8bc24(0x24a)]['x'] * 0x2,
            'y': this[_0x8bc24(0x22a)][_0x8bc24(0x269)] + this[_0x8bc24(0x24a)]['y'] * 0x2
        };
        return _0x3d5b65;
    }
}

function _0x4d79() {
    const _0x184214 = ['allowMovement', 'equals', 'normalize', 'fromCharCode', 'firstGame', 'setCollideWorldBounds', 'You\x20Win!', 'querySelectorAll', 'pop', '452586jRDaon', 'add', 'log', 'onWorldBounds', 'snakeTargetGridPos', 'highScore', 'snakeUp', 'scale', 'length', 'height', 'AI:\x20', 'DOWN', 'sound', 'game', 'style', 'speed', 'highScoreNumber', 'config', 'destroy', 'tweens', 'physics', 'gameObject', 'setOrigin', 'display', 'modalOverlay', 'P2\x20Won!', 'faceDirection', 'It\x27s\x20Tie!', 'position', 'pathfindingCheckValidPos', ',\x20sceneWidth=', 'maxGridY', 'directionChangeCooldown', 'headGridP', 'pathfinding', 'sprite', 'resetGame', 'setScale', 'scene', 'getFwdPosition2', 'getItem', 'Linear', 'player1Score', 'Vector2', 'turnTimer', 'new\x20highScore:\x20', 'gridToScenePosition', '#high-score\x20p', 'player2Score', 'snakeLeft', 'RIGHT', 'isAIPlayer', 'Player:\x20', 'shift', 'max', 'body', ',\x20gridSize=', ',\x20maxGridY=', 'pathfindingGetNeighbors', 'waitingForKey', 'versus', 'push', 'winner', '484855KswsRi', 'move', 'direction', 'previousPositions', '.win-message', 'grow', 'moveGridPositionToDirection', 'bodyHorizontal', 'innerText', 'Math', 'play', 'abs', 'You\x20Lose!', 'allowMovementAI', 'world', 'time', 'linearFunc', 'maxGridX', 'worldbounds', 'assetSuffix', 'sceneToGridPosition', '3090234vnBVmg', 'checkSelfCollision', 'textContent', 'LEFT', 'P1\x20Won!', '5geMzog', 'alive', 'snake2', 'querySelector', 'forEach', 'unshift', '958478sYKFCw', 'gridY', 'Between', 'none', 'clone', 'getElementById', 'includes', 'updateHeadSprite', 'gridX', 'getBounds', 'food', 'delayedCall', 'setTexture', 'directions', 'Tie', 'snakeRight', 'P2:\x20', '288751MKuCKy', 'setDepth', 'maxGridX=', 'setItem', 'width', 'score', 'highFinalScore', 'enable', 'Distance', 'from', '1440988zpAnAD', '40RBiQmh', 'subtract', 'snake', 'gridSize', 'ignoreSelfCollisionTimer', '12712608oYlLdt', 'twoPlayer', 'innerHTML', 'survivalTime', 'block', 'floor', 'endGame', ',\x20sceneHeight='];
    _0x4d79 = function() {
        return _0x184214;
    };
    return _0x4d79();
}